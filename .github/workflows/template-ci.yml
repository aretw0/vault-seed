name: Vault CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    if: github.repository == 'aretw0/vault-seed' # Only run this job in the template repository
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Simple Check (Placeholder)
        run: echo "Vault content pushed successfully."

      - name: Check for unwanted Copilot .gitattributes entry
        run: |
          if grep -qF ".obsidian/plugins/copilot/data.json filter=copilot-secrets diff=copilot-secrets" .gitattributes; then
            echo "::error file=.gitattributes::Found unwanted Copilot configuration in .gitattributes. This entry should not be committed to the main branch of the template repository."
            exit 1
          else
            echo "No unwanted Copilot configuration found in .gitattributes."
          fi

      - name: Check for unwanted plugin folders
        run: |
          if find .obsidian/plugins/ -mindepth 1 -maxdepth 1 -type d | grep -q .; then
            echo "::error file=.obsidian/plugins/::Found unwanted plugin folders in .obsidian/plugins/. Plugin folders should not be committed to the main branch of the template repository."
            exit 1
          else
            echo "No unwanted plugin folders found in .obsidian/plugins/."
          fi

      # --- Adicionar passos mais úteis aqui no futuro ---
      # Exemplo: Linting de Markdown (requer setup adicional)
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Cache Node.js modules
        id: cache-npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Markdownlint CLI
        run: npm install -g markdownlint-cli
      - name: Run Markdownlint
        run: markdownlint '**/*.md' --ignore '.obsidian/**/*.md' --config .markdownlint.json # Usar o arquivo de configuração existente
    #
    # Exemplo: Publicar com Quartz (requer setup do Quartz)
    # - name: Build and Deploy with Quartz (Exemplo)
    #   if: github.ref == 'refs/heads/main' # Só roda no push para main
    #   uses: jackyzha0/quartz-action@v2
    #   with:
    #     # Configurações do Quartz
    #     folder: ./ # Diretório do vault
    #     # ... outras configurações ...
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     QUARTZ_TOKEN: ${{ secrets.QUARTZ_TOKEN }} # Se necessário para deploy privado
    #

    # Explicação:
    #
    # on:: Define quando o workflow roda (push ou pull request na branch main).
    #
    # jobs:: Define as tarefas a serem executadas.
    #
    # build:: Nome do job.
    #
    # runs-on:: O tipo de máquina virtual (Ubuntu é comum).
    #
    # steps:: Sequência de ações.
    #
    #     actions/checkout@v3: Baixa o código do seu repositório para a máquina virtual do Actions.
    #
    #     Simple Check: Apenas um placeholder para confirmar que o workflow rodou.
    #
    #     Comentários: Mostram exemplos de como adicionar linting de Markdown ou um passo de build/deploy usando ferramentas como Quartz para publicar seu vault como um site estático.
