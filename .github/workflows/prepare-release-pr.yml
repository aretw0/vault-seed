name: 'Prepare Release PR'

on:
  workflow_dispatch:

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    # This workflow should only be triggered manually on the main repo
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: 'Checkout main and fetch develop'
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0 # Needed for standard-version and git history
      - run: git fetch origin develop

      - name: 'Setup Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 'Cache & Install Dependencies'
        run: |
          npm ci

      - name: 'Configure Git User'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: 'Create Release Branch'
        id: create_branch
        run: |
          BRANCH_NAME="chore/prepare-release-$(date +%s)"
          git checkout -b $BRANCH_NAME main
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: 'Merge develop into release branch'
        run: |
          git merge origin/develop --no-ff -m "chore(release): merge changes from develop"

      - name: 'Run standard-version to bump version and generate changelog'
        id: standard_version
        # We skip tagging because the release workflow will handle it after merge
        run: |
          npx standard-version --skip.tag
          echo "version=$(cat VERSION)" >> $GITHUB_ENV

      - name: 'Create Pull Request'
        uses: peter-evans/create-pull-request@v6
        with:
          title: 'chore(release): v${{ env.version }}'
          body: |
            This PR was automatically generated by the `prepare-release-pr` workflow.

            It contains the latest changes from the `develop` branch and a new version bump to **v${{ env.version }}**.

            **Please review the changes and the generated CHANGELOG before merging.**

            Once this PR is merged, the `release.yml` workflow will be triggered to automatically:
            1. Create the `v${{ env.version }}` Git tag.
            2. Publish the final GitHub Release.
          delete-branch: true
          labels: 'release, automação'
          branch: ${{ steps.create_branch.outputs.branch_name }}
          base: 'main'